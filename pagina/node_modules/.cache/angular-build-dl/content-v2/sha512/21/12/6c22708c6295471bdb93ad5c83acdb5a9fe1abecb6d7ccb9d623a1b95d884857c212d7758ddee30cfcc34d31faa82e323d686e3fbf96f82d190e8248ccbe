{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/apr-cruz/apr-cruz.component.ts","webpack:///src/app/apr-cruz/apr-cruz.component.html","webpack:///src/app/apr-proc/apr-proc.component.ts","webpack:///src/app/apr-proc/apr-proc.component.html","webpack:///src/app/cadastros/cadastros.component.ts","webpack:///src/app/cadastros/cadastros.component.html","webpack:///src/app/conf-audt/conf-audt.component.ts","webpack:///src/app/conf-audt/conf-audt.component.html","webpack:///src/app/conf-prot/conf-prot.component.ts","webpack:///src/app/conf-prot/conf-prot.component.html","webpack:///src/app/conf-pto-ent/conf-pto-ent.component.ts","webpack:///src/app/conf-pto-ent/conf-pto-ent.component.html","webpack:///src/app/conv-cte/conv-cte.component.ts","webpack:///src/app/conv-cte/conv-cte.component.html","webpack:///src/app/conv-nfe/conv-nfe.component.ts","webpack:///src/app/conv-nfe/conv-nfe.component.html","webpack:///src/app/dnf-cad/dnf-cad.component.ts","webpack:///src/app/dnf-cad/dnf-cad.component.html","webpack:///src/app/dnf-ent/dnf-ent.component.ts","webpack:///src/app/dnf-ent/dnf-ent.component.html","webpack:///src/app/dnf-proc/dnf-proc.component.ts","webpack:///src/app/dnf-proc/dnf-proc.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/inst-pre-req/inst-pre-req.component.ts","webpack:///src/app/inst-pre-req/inst-pre-req.component.html","webpack:///src/app/instalador/instalador.component.ts","webpack:///src/app/instalador/instalador.component.html","webpack:///src/app/integrador/integrador.component.ts","webpack:///src/app/integrador/integrador.component.html","webpack:///src/app/menu/menu.component.ts","webpack:///src/app/menu/menu.component.html","webpack:///src/app/nd-ent/nd-ent.component.ts","webpack:///src/app/nd-ent/nd-ent.component.html","webpack:///src/app/nd-proc/nd-proc.component.ts","webpack:///src/app/nd-proc/nd-proc.component.html","webpack:///src/app/nfe/nfe.component.ts","webpack:///src/app/nfe/nfe.component.html","webpack:///src/app/nfs-cad/nfs-cad.component.ts","webpack:///src/app/nfs-cad/nfs-cad.component.html","webpack:///src/app/nfs-conv/nfs-conv.component.ts","webpack:///src/app/nfs-conv/nfs-conv.component.html","webpack:///src/app/nfs-ent/nfs-ent.component.ts","webpack:///src/app/nfs-ent/nfs-ent.component.html","webpack:///src/app/nfs-proc/nfs-proc.component.ts","webpack:///src/app/nfs-proc/nfs-proc.component.html","webpack:///src/app/nfs/nfs.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","data","title","pathMatch","routerOptions","useHash","anchorScrolling","onSameUrlNavigation","enableTracing","scrollPositionRestoration","AppRoutingModule","forRoot","imports","routingComponents","AppComponent","titleService","router","setTitle","navigate","selector","templateUrl","styleUrls","MaterialModule","declarations","AppModule","providers","bootstrap","AprCruzComponent","AprProcComponent","CadastrosComponent","ConfAudtComponent","ConfProtComponent","ConfPtoEntComponent","ConvCteComponent","ConvNfeComponent","DnfCadComponent","DnfEntComponent","DnfProcComponent","HomeComponent","InstPreReqComponent","InstaladorComponent","IntegradorComponent","MenuComponent","route","titleCab","mainMenuItems","getMenuItems","getTitle","opc","search","substring","trim","config","filter","map","events","subscribe","setDocTitle","MenuItem","NdEntComponent","NdProcComponent","NfeComponent","NfsCadComponent","NfsConvComponent","NfsEntComponent","NfsProcComponent","NfsComponent","template","styles","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, ExtraOptions } from '@angular/router';\nimport { InstaladorComponent } from './instalador/instalador.component';\nimport { HomeComponent } from './home/home.component';\nimport { InstPreReqComponent } from './inst-pre-req/inst-pre-req.component';\nimport { ConfAudtComponent } from './conf-audt/conf-audt.component';\nimport { ConfProtComponent } from './conf-prot/conf-prot.component';\nimport { ConfPtoEntComponent } from './conf-pto-ent/conf-pto-ent.component';\nimport { DnfProcComponent } from './dnf-proc/dnf-proc.component';\nimport { DnfCadComponent } from './dnf-cad/dnf-cad.component';\nimport { DnfEntComponent } from './dnf-ent/dnf-ent.component';\nimport { ConvNfeComponent } from './conv-nfe/conv-nfe.component';\nimport { ConvCteComponent } from './conv-cte/conv-cte.component';\nimport { NfsProcComponent } from './nfs-proc/nfs-proc.component';\nimport { NfsCadComponent } from './nfs-cad/nfs-cad.component';\nimport { NfsEntComponent } from './nfs-ent/nfs-ent.component';\nimport { NfsConvComponent } from './nfs-conv/nfs-conv.component';\nimport { NdProcComponent } from './nd-proc/nd-proc.component';\nimport { NdEntComponent } from './nd-ent/nd-ent.component';\nimport { AprProcComponent } from './apr-proc/apr-proc.component';\nimport { AprCruzComponent } from './apr-cruz/apr-cruz.component';\n\nconst routes: Routes = [\n  { path: 'instalador', component:InstaladorComponent, data: { title: 'Instalação - Instalador' }  },\n  { path: '#peInstalado', component:InstaladorComponent, data: { title: 'Ponto de Entrada' }  },\n  { path: 'home', component:HomeComponent, pathMatch: 'prefix', data: { title: 'Home' }  },\n  { path: 'instPreReq', component:InstPreReqComponent, data: { title: 'Instalação - Pré-requisitos' }  },\n  { path: 'confAudt', component:ConfAudtComponent, data: { title: 'Configuração - Auditto' }  },\n  { path: 'confProt', component:ConfProtComponent, data: { title: 'Configuração - Protheus' }  },\n  { path: 'confPtoEnt', component:ConfPtoEntComponent, data: { title: 'Configuração - Pontos de Entrada' }  },\n  { path: 'dnfProc', component:DnfProcComponent, data: { title: 'Danfe - Processo' }  },\n  { path: 'dnfCad', component:DnfCadComponent, data: { title: 'Danfe - Cadastros' }  },\n  { path: 'dnfEnt', component:DnfEntComponent, data: { title: 'Danfe - Entrada NFE/CTE' }  },\n  { path: 'convNfe', component:ConvNfeComponent, data: { title: 'Danfe - Conversão NFE' }  },\n  { path: 'convCte', component:ConvCteComponent, data: { title: 'Danfe - Conversão CTE' }  },\n  { path: 'nfsProc', component:NfsProcComponent, data: { title: 'NFS-e - Processo' }  },\n  { path: 'nfsCad', component:NfsCadComponent, data: { title: 'NFS-e - Cadastros' }  },\n  { path: 'nfsEnt', component:NfsEntComponent, data: { title: 'NFS-e - Entrada' }  },\n  { path: 'nfsConv', component:NfsConvComponent, data: { title: 'NFS-e - Conversão' }  },\n  { path: 'ndProc', component:NdProcComponent, data: { title: 'ND - Processo' }  },\n  { path: 'ndEnt', component:NdEntComponent, data: { title: 'ND - Entrada' }  },\n  { path: 'aprProc', component:AprProcComponent, data: { title: 'Apuração - Processo' }  },\n  { path: 'aprCruz', component:AprCruzComponent, data: { title: 'Apuração - Cruzamento' }  }\n];\n\nconst routerOptions: ExtraOptions = {\n  useHash: false,\n  anchorScrolling: \"enabled\",\n  onSameUrlNavigation: \"reload\",\n  enableTracing: true,\n  scrollPositionRestoration: \"enabled\"\n  // ...any other options you'd like to use\n};\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, routerOptions)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\nexport const routingComponents = [InstaladorComponent, HomeComponent, InstPreReqComponent, ConfAudtComponent, ConfProtComponent, ConfPtoEntComponent, DnfProcComponent, DnfCadComponent, DnfEntComponent, ConvNfeComponent, ConvCteComponent, NfsProcComponent, NfsCadComponent, NfsEntComponent, NfsConvComponent, NdProcComponent, NdEntComponent, AprProcComponent, AprCruzComponent];\n\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  \n  title = 'Audit.& Prot - Home';\n\n  constructor(private titleService: Title, private router: Router) {};\n\n  ngOnInit() {\n\n    this.titleService.setTitle(this.title); \n    this.router.navigate([\"home\"]);\n\n  }\n\n}\n","<app-menu></app-menu>","import { BrowserModule, Title } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar'; \nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { HomeComponent } from './home/home.component';\nimport { InstaladorComponent } from './instalador/instalador.component';\nimport { IntegradorComponent } from './integrador/integrador.component';\nimport { NfeComponent } from './nfe/nfe.component';\nimport { CadastrosComponent } from './cadastros/cadastros.component';\nimport { NgxPageScrollModule } from 'ngx-page-scroll';\nimport { TextareaAutosizeModule } from 'ngx-textarea-autosize';\nimport { NfsComponent } from './nfs/nfs.component';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport { InstPreReqComponent } from './inst-pre-req/inst-pre-req.component';\nimport { ConfAudtComponent } from './conf-audt/conf-audt.component';\nimport { ConfProtComponent } from './conf-prot/conf-prot.component';\nimport { ConfPtoEntComponent } from './conf-pto-ent/conf-pto-ent.component';\nimport { DnfProcComponent } from './dnf-proc/dnf-proc.component';\nimport { DnfCadComponent } from './dnf-cad/dnf-cad.component';\nimport { DnfEntComponent } from './dnf-ent/dnf-ent.component';\nimport { ConvNfeComponent } from './conv-nfe/conv-nfe.component';\nimport { ConvCteComponent } from './conv-cte/conv-cte.component';\nimport { NfsProcComponent } from './nfs-proc/nfs-proc.component';\nimport { NfsCadComponent } from './nfs-cad/nfs-cad.component';\nimport { NfsEntComponent } from './nfs-ent/nfs-ent.component';\nimport { NfsConvComponent } from './nfs-conv/nfs-conv.component';\nimport { NdProcComponent } from './nd-proc/nd-proc.component';\nimport { NdEntComponent } from './nd-ent/nd-ent.component';\nimport { AprProcComponent } from './apr-proc/apr-proc.component';\nimport { AprCruzComponent } from './apr-cruz/apr-cruz.component';\n\n/**\n * NgModule that includes all Material modules.\n*/\n@NgModule({\n  exports: [\n    // CDK\n    A11yModule,\n    BidiModule,\n    ObserversModule,\n    OverlayModule,\n    PlatformModule,\n    PortalModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    // Material\n    MatIconModule,\n    MatListModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatButtonModule\n  ],\n  declarations: []\n})\nexport class MaterialModule {}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuComponent,\n    routingComponents,\n    HomeComponent,\n    InstaladorComponent,\n    IntegradorComponent,\n    NfeComponent,\n    CadastrosComponent,\n    NfsComponent,\n    InstPreReqComponent, \n    ConfAudtComponent, \n    ConfProtComponent, \n    ConfPtoEntComponent, \n    DnfProcComponent, \n    DnfCadComponent, \n    DnfEntComponent, \n    ConvNfeComponent, \n    ConvCteComponent, \n    NfsProcComponent, \n    NfsCadComponent, \n    NfsEntComponent, \n    NfsConvComponent, \n    NdProcComponent, \n    NdEntComponent, \n    AprProcComponent, \n    AprCruzComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatIconModule,\n    MatButtonModule,\n    MatMenuModule,\n    FlexLayoutModule,\n    AppRoutingModule,\n    FormsModule,\n    NgxPageScrollModule,\n    TextareaAutosizeModule\n  ],\n  providers: [Title],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-apr-cruz',\n  templateUrl: './apr-cruz.component.html',\n  styleUrls: ['./apr-cruz.component.css']\n})\nexport class AprCruzComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>apr-cruz works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-apr-proc',\n  templateUrl: './apr-proc.component.html',\n  styleUrls: ['./apr-proc.component.css']\n})\nexport class AprProcComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>apr-proc works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cadastros',\n  templateUrl: './cadastros.component.html',\n  styleUrls: ['./cadastros.component.css']\n})\nexport class CadastrosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","\n<h1 class=\"titulo\" >\n\n    <div fxLayout=\"col\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n        <span>Cadastros</span>         \n    </div>\n    \n</h1>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Essa rotina faz a Integração dos cadastros bases do Protheus para o Auditto, esses cadastros podem ser revisados no Auditto para retornarem depois para o Protheus, mas essa revisão é a cargo do Cliente, não é obrigatória. Essa integração está separada em três modalidades: Cadastro, Movimento e Auxiliar. Apenas a modalidade de cadastro pode ser revisada.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    O Protheus busca as informações que são enviadas para o Auditto, caso elas sofram alguma alteração o programa a envia novamente, elas são importantes para realizar o vinculo com os documentos, como por exemplo, o produto fornecedor x cliente para entrada da NFE.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Já está configurado por default o envio das informações de Fornecedor, Produto - Materiais, Produto - Serviços, Amarração de Produtos e Pedido de Compra. Os principais filtros e campos já estão configurados e caso algum campo precise de uma consulta auxiliar o sistema também envia essa tabela para o Auditto.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Os filtros de consulta dos dados, as tabelas e os campos, podem ser modificados via ponto de entrada, os detalhes se encontram neste mesmo tutorial.\n</div>\n\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\">\n    \n    <ul class=\"ul\">Pré-Requisitos:\n    <li class=\"li\">Instalador rodado;</li>\n    <li class=\"li\">Integrador configurado;</li>\n    <li class=\"li\">Patch de Cadastro compilada;</li>\n    </ul>\n\n</div>\n\n<section id=\"tp1Cadastros\">\n    <h2 class=\"subtit\" >\n    \n        <div fxLayout=\"col\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n            <li><span>Funcionamento:</span></li>\n        </div>\n        \n    </h2>\n</section>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    O sistema cria tabelas por empresa/filial/tabela para fazer o controle da integração, elas são tabelas verticalizadas pois são totalmente flexiveis.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\">\n    \n    <ul class=\"ul\">As tabelas para controle das integrações (ZZ é a Empresa, XX é a Filial e YYY é a tabela):\n    <li class=\"li\">Tabelas (DADEXPTABZZXX);</li>\n    <li class=\"li\">Campos (DADEXPCPOZZXX);</li>\n    <li class=\"li\">Dicionário (SX3EXPZZXX);</li>\n    <li class=\"li\">Dados (DADEXPCABZZXXYYY, DADEXPITMZZXXYYY);</li>\n    </ul>\n\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Essas tabelas servem para o sistem fazer a comparação daquilo que foi enviado versus o que existe no sistema. Quando um cadastro é alterado ou incluído ele gera um processo de revisão que é enviado para o Auditto. Existe uma tela para acompanhar as integrações e as revisões.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    A tela é dividida em duas partes, a de cima é o controle das revisões a de baixo o controle dos documentos e suas etapas.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/painel.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Pode-se clicar no número são demonstrados os itens que o representam.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/revisados.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    No canto inferior direito pode-se verificar a data e hora do ultimo sincronismo entre os sistemas.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/painel_ult_int.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    O formulário de revisão de cadastros é dinâmico conforme pontos de entrada selecionados pelo cliente, por default alguns campos já estão selecionados para revisão. A obrigatoriedade dos campos não está amarrada ao dicionário para que o cliente possa selecionar campos distintos como obrigatórios no processo de revisão, criando como dois formulários um mais simples de inclusão e outro mais especifico de revisão.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/formulario.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    O sistema envia automaticamente a tabela auxiliar de campos do formulário conforme identificação no dicionário de dados (SX3).\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/formulario_combo.png\" class=\"img-fluid\" />\n</div>\n\n<section id=\"tp2Cadastros\">\n    <h2 class=\"subtit\" >\n    \n        <div fxLayout=\"col\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n            <li><span>Pontos de Entrada:</span></li>\n        </div>\n        \n    </h2>\n</section>\n\n<div fxLayout=\"col\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    <ul>\n    <li>XMLPU007 - Para adicionar tabelas na integração ou/e modificar filtros, caso adicione uma tabela é preciso criar o XMLPU008 para adicionar campos a essa tabela.</li>\n    </ul>\n</div>\n\n<textarea class=\"box\" autosize readonly=\"true\">\n\n    User Function XMLPU007\n\n    Local aTab := Paramixb\n    \n    /****Exemplo de preenchimento********\n        aadd(aTab,{\"SB1_SRV\",\"CAD\",\"B1_TIPO = 'SV'\"                                                    })\n        aadd(aTab,{\"SC7\"    ,\"MOV\",\"( C7_QUANT - C7_QUJE ) > 0 AND C7_RESIDUO = ' ' AND C7_ENCER = ' '\"})\n    ********/\n    \n    Return aTab\n</textarea>\n\n<div fxLayout=\"col\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    <ul>\n    <li>XMLPU008 - Para adicionar campos na integração.\n    </ul>\n</div>\n\n<textarea class=\"box\" autosize readonly=\"true\" >\n\n    User Function XMLPU008\n\n    Local cTab  := Paramixb[1]\n    Local aCpos := Paramixb[2]\n    \n    /****Exemplo de preenchimento********\n        1-Campo, 2 - S para revisar o campo no Auditto e N para não revisar o campo, 3 - S para obrigatório e N para não obrigatório.\n    \n        aadd(aCpos,{'B1_DESC'  ,'N','N'}) //Campo não revisado e não obrigatório\n        aadd(aCpos,{'B1_POSIPI','S','S'}) //Campo revisado e obrigatório\n    ********/\n    \n    Return aCpos\n</textarea>\n\n<div fxLayout=\"col\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    <ul>\n    <li>XMLPU009 - Recebe os arrays detalhados da SX3 e dados das tabelas.\n    </ul>\n</div>\n\n<textarea class=\"box\" autosize readonly=\"true\" >\n\n    User Function XMLPU009\n\n    Local aSX3  := Paramixb[1]\n    Local aTabs := Paramixb[2]\n    \n    /****Exemplo de preenchimento********\n    \n    cTp:\n         CAD - Cadastro\n         MOV - Movimento\n         AUX - Auxiliar\n    \n    cFil: Filtro na tabela.\n    \n        aadd(aTabs,{ cTab, AllTrim(SX2->X2_NOME), SX2->X2_UNICO, cFil, aCpos, cTp, .F. } )\n        \n        aadd(aSX3,{ aTabs[a][1]  ,SX3->X3_CAMPO,;\n                    {\"X3_ORDEM\"  ,SX3->X3_ORDEM  },;\n                    {\"X3_TIPO\"   ,SX3->X3_TIPO   },;\n                    {\"X3_TAMANHO\",SX3->X3_TAMANHO},;\n                    {\"X3_DECIMAL\",SX3->X3_DECIMAL},;\n                    {\"X3_TITULO\" ,SX3->X3_TITULO },;\n                    {\"X3_DESCRIC\",SX3->X3_DESCRIC},;\n                    {\"X3_F3\"     ,SX3->X3_F3     },;\n                    {\"X3_REVISA\" ,aCpos[b][2]    },;\n                    {\"X3_OBRIGAT\",aCpos[b][3]    },;\n                    {\"X3_CBOX\"   ,SX3->X3_CBOX   } ;\n                  } )\n    ********/\n    \n    Return { aSX3, aTabs }\n</textarea>\n\n<div fxLayout=\"col\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    <ul>\n    <li>XMLPU010 - Manipula query de seleção de dados para exportação dos cadastros e movimentos.\n    </ul>\n</div>\n\n<textarea class=\"box\" autosize readonly=\"true\" >\n\n    User Function XMLPU010\n\n    Local cTab := Paramixb[1]\n    Local cQry := Paramixb[2]\n    \n    Return cQry\n</textarea>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-conf-audt',\n  templateUrl: './conf-audt.component.html',\n  styleUrls: ['./conf-audt.component.css']\n})\nexport class ConfAudtComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>conf-audt works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-conf-prot',\n  templateUrl: './conf-prot.component.html',\n  styleUrls: ['./conf-prot.component.css']\n})\nexport class ConfProtComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>conf-prot works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-conf-pto-ent',\n  templateUrl: './conf-pto-ent.component.html',\n  styleUrls: ['./conf-pto-ent.component.css']\n})\nexport class ConfPtoEntComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>conf-pto-ent works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-conv-cte',\n  templateUrl: './conv-cte.component.html',\n  styleUrls: ['./conv-cte.component.css']\n})\nexport class ConvCteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>conv-cte works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-conv-nfe',\n  templateUrl: './conv-nfe.component.html',\n  styleUrls: ['./conv-nfe.component.css']\n})\nexport class ConvNfeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>conv-nfe works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dnf-cad',\n  templateUrl: './dnf-cad.component.html',\n  styleUrls: ['./dnf-cad.component.css']\n})\nexport class DnfCadComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dnf-cad works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dnf-ent',\n  templateUrl: './dnf-ent.component.html',\n  styleUrls: ['./dnf-ent.component.css']\n})\nexport class DnfEntComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dnf-ent works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dnf-proc',\n  templateUrl: './dnf-proc.component.html',\n  styleUrls: ['./dnf-proc.component.css']\n})\nexport class DnfProcComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dnf-proc works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n}\n","<h1 class=\"titulo\" >\n\n    <div fxLayout=\"col\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n        <span>Integração</span>         \n    </div>\n\n    <div fxLayout=\"col\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n        <span>Auditto & Protheus</span>         \n    </div>\n\n</h1>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Este tutorial demonstra como é a instalação, acompanhamento da integração e automatização entre o Auditto & Protheus. \n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    A Auditto é  uma empresa especialista na oferta de soluções completas de softwares de alto valor tecnológico para redução da carga tributária, recuperação de créditos e compliance fiscal. O ERP Protheus da TOTVS é completo, flexível e acompanha o crescimento da sua empresa com controle total de todas as atividades administrativas/financeiras (backoffice).\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Na imagem abaixo é possível verificar como funciona a troca de informações entre os sistemas.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n<img src=\"assets/img/protheus&auditto.png\" class=\"img-fluid\" />\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inst-pre-req',\n  templateUrl: './inst-pre-req.component.html',\n  styleUrls: ['./inst-pre-req.component.css']\n})\nexport class InstPreReqComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>inst-pre-req works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-instalador',\n  templateUrl: './instalador.component.html',\n  styleUrls: ['./instalador.component.css']\n})\nexport class InstaladorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<h1 class=\"titulo\" >\n\n    <div fxLayout=\"col\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n        <span>Instalador</span>         \n    </div>\n    \n</h1>\n    \n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Este tutorial explica como funciona o processo de instalação da integração Protheus & Auditto. Esse programa criará os dicionários de dados de estrutura para processamento da integração.\n</div>\n    \n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\">\n    \n    <ul class=\"ul\">Pré-Requisitos:\n    <li class=\"li\">Aplique a patch de instalação da integração;</li>\n    <li class=\"li\">Configure o SSLConfigure no aapserver.ini;</li>\n    <li class=\"li\">Crie o programa XMLPU001.prw com as empresas do sigamat.emp que farão parte da integração;</li>\n    <li class=\"li\">Solicite seu usuário e senha de api da Auditto;</li>\n    <li class=\"li\">Libere o acesso do servidor a página: https://admin.auditto.com.br ;</li>\n    </ul>\n\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n        No appserver.ini tag SLLConfigure:\n</div>\n     \n<textarea class=\"box\" autosize readonly=\"true\" >\n        \n    [SSLConfigure]\n    SSL2      = 1\n    SSL3      = 1\n    TLS1_0    = 1\n    TLS1_1    = 1\n    TLS1_2    = 1\n    Verbose   = 1\n    Bugs      = 1\n    State     = 1\n    CacheSize = 32\n</textarea>\n    \n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Programa XMLPU001:\n</div>\n \n<textarea class=\"box\" autosize readonly=\"true\" >\n    \n   User Function XMLPU001\n\n   //array com os códigos das empresas (M0_CODIGO)\n   Local aEmp := {\"01\",\"02\",\"03\",\"99\"}\n            \n   Return aEmp\n</textarea>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Abra o smartclient e no lugar da chamada de programa inicial preencha U_XMLAM001 e clique em Ok.\n</div>      \n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/smart_inicial.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    A tela de configuração é para que o sistema crie os dicionários para as empresas selecionadas levando em consideração suas tabelas existentes. Preencha todas as informações da tela e confirme.\n</div>      \n    \n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/tela_inst_sem_parm.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Exemplo de preenchimento:\n</div>      \n        \n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/tela_inst_com_parm.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Recomendação: Confira a geração dos dicionários de dados SX2, SX3, SIX e SX6.\n</div>      \n            \n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/inst_sx6.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\" >\n        <img src=\"assets/img/inst_sx3.png\" class=\"img-fluid\" />\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-integrador',\n  templateUrl: './integrador.component.html',\n  styleUrls: ['./integrador.component.css']\n})\nexport class IntegradorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<h1 class=\"titulo\" >\n\n    <div fxLayout=\"col\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n        <span>Integrador</span>         \n    </div>\n    \n</h1>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Existe um programa responsável por todo o processo de integração, pois ele executa os demais programas, para isso se faz necessária a configuração dele por job.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\">\n    \n        <ul class=\"ul\">Pré-Requisitos:\n            <li class=\"li\">Instalador rodado;</li> \n            <li class=\"li\">Patch de algum documento de integração aplicada;</li>\n        </ul>\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Para acompanhar as integrações existe um painel que demonstra os status e seus detalhes.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/painel.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/painel_integrado.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    A parte de baixo pode ser filtrada conforme parâmetro de datas, apenas os erros de integração não respeitarão os filtros pois eles precisam ser corrigidos.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/painel_dt_2.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/painel_dt_1.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Caso haja erro na integração aparecerá um novo status e os detalhes aparecem ao clicar no número.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/painel_erro_1.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/painel_erro_2.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Configure o programa U_XMLJJ001 para execução via Job recomenda-se um intervalo de 30 minutos para execução.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Existe mais de uma forma para configuração de Job, escolha uma:\n</div>\n\n<ul class=\"text\">\n    <li class=\"li\">Execução do smartclient;</li>\n    <li class=\"li\">Appserver.ini;</li>\n    <li class=\"li\">Configurador;</li>\n</ul>\n\n<section id=\"tp1Integrador\">\n<h2 class=\"subtit\">\n\n    <div fxLayout=\"col\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n        <li><span>Execução do smartclient:</span></li>\n    </div>\n    \n</h2>\n</section>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    O protheus pode ser executado sem tela, para isso você configura o atalho para execução por comando de linha, ficará assim:\n</div>\n\n<ul class='text'>\n    <li>No Windows: c:\\totvs\\smartclient\\smartclient.exe -q -m -c=tcp -e=local -p=U_XMLJJ001</li>\n    <li>No Linux: /totvs/smartclient/smartclient -q -m -c=tcp -e=local -p=U_XMLJJ001</li>\n</ul>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Você pode agendar no seu servidor a execução do comando no tempo que precisar e verificar a correta execução no console.log.\n</div>\n\n<section id=\"tp2Integrador\">\n<h2 class=\"subtit\" >\n\n    <div fxLayout=\"col\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n        <li><span> Appserver.ini:</span></li>         \n    </div>\n    \n</h2>\n</section>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Você pode executar o programa em um serviço de appserver do servidor, abra o arquivo appserver.ini, e inclua as chaves:\n</div>\n\n<textarea class=\"box\" autosize readonly=\"true\" >\n\n\t[OnStart]\n\tJobs=IntAudit\n\tRefreshRate=1800\n\n\t[IntAudit]\n\tMain=U_XMLJJ001\n\tEnvironment=local\n </textarea>\n\n <div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Reinicie o serviço e verifique a chamada da execução no console.log.\n</div>\n \n<section id=\"tp3Integrador\">\n<h2 class=\"subtit\" >\n\n    <div fxLayout=\"col\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n        <li><span>Configurador:</span></li>\n    </div>\n    \n</h2>\n</section>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Recomenda-se criar um serviço só para o schedule do Protheus, segue a demonstração de como configurar e agendar uma execução.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Primeiro acesse o configurador do Protheus:\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/smart_inicial_cfg.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Acesse Ambiente -> Schedule -> Schedule\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/cfg_sch.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Clique no (+) do Agent -> Cadastro, Adicionar agente padrão.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/cfg_agent.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Agora clique em Agent -> Iniciar todos os serviços\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/cfg_agent_srv.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Clique também em Schedule -> Iniciar todos os serviços\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/cfg_sch_srv.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Agora vamos cadastrar o agendamento, vá para Agendamentos -> Cadastro, rola a barra e em detalhes aperte no (+) Incluir.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/sch_agend_cad.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Preencha as informações, rotina com U_XMLJJ001, hora, com o horário inicio do dia, colocarei 06:00, empresa/filial, faz necessário apenas uma para que ele execute, pois o programa varrerá o ponto de entrada da configuração, módulo nesse exemplo está como 02 - Compras.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/sch_agend_cad_inc.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Depois selecione Recorrência para configurar a quantidade de execuções no dia.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/sch_agend_cad_rec.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Está para rodar todos os dias da semana das 06:00 as 23:00, para isso selecionar “todos os dias da semana”, em Número de Execuções colocar 0035 e intervalo 00:30, alterar data de término para “Sem data de término”\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/sch_agend_cad_rec_inc.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Confirme a recorrência e a gravação do cadastros.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/sch_agend.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Recomendação: Sempre confira a execução do programa no console.log do appserver utilizado caso ocorra algum erro, copie e abra um chamado com o nosso canal de atendimento.\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\n\nexport class MenuComponent implements OnInit {\n\n  titleCab = 'Audit.& Prot - ';\n  mainMenuItems;\n\n  constructor(private route: ActivatedRoute, private router: Router, private titleService: Title) {\n      this.mainMenuItems = this.getMenuItems(this.titleService.getTitle(),\"\")\n  }\n\ngetMenuItems(title: string, opc: string): MenuItem[] {\n\n  if( title.search(\"-\") > 0 ) {\n    opc = title.substring(title.search(\"-\") + 2).trim();\n  }\n\n  return this.router.config\n      .filter(route => route.data && route.data.title && route.path.search(opc) >= 0  && route.path.search(\"#\") >= 0 ) //only add a menu item for routes with a title set.\n      .map(route => {\n        return {\n          path: route.path,\n          title: route.data.title\n         };\n      } );\n}\n\n  setDocTitle(title: string) {\n     this.titleService.setTitle(this.titleCab + title);\n  }\n\n  ngOnInit() {\n\n    this.router.events.subscribe(() => {\n      this.mainMenuItems = this.getMenuItems(this.titleService.getTitle(),\"\");\n    });\n\n  }\n\n}\n\nexport class MenuItem {\n  path: string;\n  title: string;\n}\n","<mat-toolbar color=\"primary\" class=\"mat-elevation-z6\">\n    <mat-toolbar-row>\n      <span>Auditto & Protheus</span>             \n      <button mat-icon-button (click)=\"sidenav.toggle()\" fxShow=\"true\" fxHide.gt-sm>\n        <mat-icon>menu</mat-icon>\n      </button>      \n      <span class=\"fill-remaining-space\"></span>\n      <div fxShow=\"true\" fxHide.lt-md=\"true\" fxLayoutAlign=\"end center\">\n        <!-- The following menu items will be hidden on both SM and XS screen sizes -->\n        <a (click)=\"setDocTitle( 'Home' )\" routerLink=\"/home\" routerLinkActive=\"active\" mat-button>Home</a>\n        <button mat-button [matMenuTriggerFor]=\"insInst\" routerLinkActive=\"active\" >Instalação</button>   \n        <mat-menu #insInst=\"matMenu\" yPosition=\"below\">\n          <button mat-menu-item (click)=\"setDocTitle( 'Instalação - Pré-requisitos' )\" routerLink=\"/instPreReq\" >Pré-requisitos</button>\n          <button mat-menu-item (click)=\"setDocTitle( 'Instalação - Instalador' )\" routerLink=\"/instalador\" >Instalador</button>\n        </mat-menu>    \n        <button mat-button [matMenuTriggerFor]=\"config\">Configuração</button>   \n        <mat-menu #config=\"matMenu\" yPosition=\"below\">\n          <button mat-menu-item (click)=\"setDocTitle( 'Configuração - Auditto' )\" routerLink=\"/confAudt\" >Auditto</button>\n          <button mat-menu-item (click)=\"setDocTitle( 'Configuração - Protheus' )\" routerLink=\"/confProt\" >Protheus</button>\n          <button mat-menu-item (click)=\"setDocTitle( 'Configuração - Pontos de Entrada' )\" routerLink=\"/confPtoEnt\" >Pontos de Entrada</button>\n        </mat-menu>\n        <button mat-button [matMenuTriggerFor]=\"danfe\">Danfe (NFE/CTE)</button>   \n        <mat-menu #danfe=\"matMenu\" yPosition=\"below\">\n          <button mat-menu-item (click)=\"setDocTitle( 'Danfe - Processo' )\" routerLink=\"/dnfProc\" routerLinkActive=\"active\">Processo</button>\n          <button mat-menu-item (click)=\"setDocTitle( 'Danfe - Cadastros' )\" routerLink=\"/dnfCad\" routerLinkActive=\"active\">Cadastros</button>\n          <button mat-menu-item (click)=\"setDocTitle( 'Danfe - Entrada NFE/CTE' )\" routerLink=\"/dnfEnt\" routerLinkActive=\"active\">Entrada NFE/CTE</button>\n          <button mat-menu-item (click)=\"setDocTitle( 'Danfe - Conversão NFE' )\" routerLink=\"/convNfe\" routerLinkActive=\"active\">Conversão NFE</button>\n          <button mat-menu-item (click)=\"setDocTitle( 'Danfe - Conversão CTE' )\" routerLink=\"/convCte\" routerLinkActive=\"active\">Conversão CTE</button>\n        </mat-menu>\n        <button mat-button [matMenuTriggerFor]=\"nfse\">NFS-e</button>   \n        <mat-menu #nfse=\"matMenu\" yPosition=\"below\">\n          <button mat-menu-item (click)=\"setDocTitle( 'NFS-e - Processo' )\" routerLink=\"/nfsProc\" >Processo</button>\n          <button mat-menu-item (click)=\"setDocTitle( 'NFS-e - Cadastros' )\" routerLink=\"/nfsCad\" >Cadastros</button>\n          <button mat-menu-item (click)=\"setDocTitle( 'NFS-e - Entrada' )\" routerLink=\"/nfsEnt\" >Entrada</button>\n          <button mat-menu-item (click)=\"setDocTitle( 'NFS-e - Conversão' )\" routerLink=\"/nfsConv\" >Conversão</button>\n        </mat-menu>\n        <button mat-button [matMenuTriggerFor]=\"notaDebito\">Nota de Débito</button>\n        <mat-menu #notaDebito=\"matMenu\" yPosition=\"below\">\n          <button mat-menu-item (click)=\"setDocTitle( 'ND - Processo' )\" routerLink=\"/ndProc\" >Processo</button>\n          <button mat-menu-item (click)=\"setDocTitle( 'ND - Entrada' )\" routerLink=\"/ndEnt\" >Entrada</button>\n        </mat-menu>\n        <button mat-button [matMenuTriggerFor]=\"apuracao\">Apuração</button>\n        <mat-menu #apuracao=\"matMenu\" yPosition=\"below\">\n          <button mat-menu-item (click)=\"setDocTitle( 'Apuração - Processo' )\" routerLink=\"/aprProc\" >Processo</button>\n          <button mat-menu-item (click)=\"setDocTitle( 'Apuração - Cruzamento' )\" routerLink=\"/aprCruz\">Cruzamento</button>\n        </mat-menu>        \n      </div>\n    </mat-toolbar-row> \n</mat-toolbar>\n\n<mat-sidenav-container class=\"main-sidenav-container\">\n    <mat-sidenav #sidenav fullscreen>\n      <mat-nav-list>\n          <a (click)=\"setDocTitle( 'Home' )\" routerLink=\"/home\" routerLinkActive=\"active\" mat-button>Home</a>\n          <button mat-button [matMenuTriggerFor]=\"insInst\" routerLinkActive=\"active\" >Instalação</button>   \n          <mat-menu #insInst=\"matMenu\" yPosition=\"below\">\n            <button mat-menu-item (click)=\"setDocTitle( 'Instalação - Pré-requisitos' )\" routerLink=\"/instPreReq\" >Pré-requisitos</button>\n            <button mat-menu-item (click)=\"setDocTitle( 'Instalação - Instalador' )\" routerLink=\"/instalador\" >Instalador</button>\n          </mat-menu>    \n          <button mat-button [matMenuTriggerFor]=\"config\">Configuração</button>   \n          <mat-menu #config=\"matMenu\" yPosition=\"below\">\n            <button mat-menu-item (click)=\"setDocTitle( 'Configuração - Auditto' )\" routerLink=\"/confAudt\" >Auditto</button>\n            <button mat-menu-item (click)=\"setDocTitle( 'Configuração - Protheus' )\" routerLink=\"/confProt\" >Protheus</button>\n            <button mat-menu-item (click)=\"setDocTitle( 'Configuração - Pontos de Entrada' )\" routerLink=\"/confPtoEnt\" >Pontos de Entrada</button>\n          </mat-menu>\n          <button mat-button [matMenuTriggerFor]=\"danfe\">Danfe (NFE/CTE)</button>   \n          <mat-menu #danfe=\"matMenu\" yPosition=\"below\">\n            <button mat-menu-item (click)=\"setDocTitle( 'Danfe - Processo' )\" routerLink=\"/dnfProc\" routerLinkActive=\"active\">Processo</button>\n            <button mat-menu-item (click)=\"setDocTitle( 'Danfe - Cadastros' )\" routerLink=\"/dnfCad\" routerLinkActive=\"active\">Cadastros</button>\n            <button mat-menu-item (click)=\"setDocTitle( 'Danfe - Entrada NFE/CTE' )\" routerLink=\"/dnfEnt\" routerLinkActive=\"active\">Entrada NFE/CTE</button>\n            <button mat-menu-item (click)=\"setDocTitle( 'Danfe - Conversão NFE' )\" routerLink=\"/convNfe\" routerLinkActive=\"active\">Conversão NFE</button>\n            <button mat-menu-item (click)=\"setDocTitle( 'Danfe - Conversão CTE' )\" routerLink=\"/convCte\" routerLinkActive=\"active\">Conversão CTE</button>\n          </mat-menu>\n          <button mat-button [matMenuTriggerFor]=\"nfse\">NFS-e</button>   \n          <mat-menu #nfse=\"matMenu\" yPosition=\"below\">\n            <button mat-menu-item (click)=\"setDocTitle( 'NFS-e - Processo' )\" routerLink=\"/nfsProc\" >Processo</button>\n            <button mat-menu-item (click)=\"setDocTitle( 'NFS-e - Cadastros' )\" routerLink=\"/nfsCad\" >Cadastros</button>\n            <button mat-menu-item (click)=\"setDocTitle( 'NFS-e - Entrada' )\" routerLink=\"/nfsEnt\" >Entrada</button>\n            <button mat-menu-item (click)=\"setDocTitle( 'NFS-e - Conversão' )\" routerLink=\"/nfsConv\" >Conversão</button>\n          </mat-menu>\n          <button mat-button [matMenuTriggerFor]=\"notaDebito\">Nota de Débito</button>\n          <mat-menu #notaDebito=\"matMenu\" yPosition=\"below\">\n            <button mat-menu-item (click)=\"setDocTitle( 'ND - Processo' )\" routerLink=\"/ndProc\" >Processo</button>\n            <button mat-menu-item (click)=\"setDocTitle( 'ND - Entrada' )\" routerLink=\"/ndEnt\" >Entrada</button>\n          </mat-menu>\n          <button mat-button [matMenuTriggerFor]=\"apuracao\">Apuração</button>\n          <mat-menu #apuracao=\"matMenu\" yPosition=\"below\">\n            <button mat-menu-item (click)=\"setDocTitle( 'Apuração - Processo' )\" routerLink=\"/aprProc\" >Processo</button>\n            <button mat-menu-item (click)=\"setDocTitle( 'Apuração - Cruzamento' )\" routerLink=\"/aprCruz\">Cruzamento</button>\n          </mat-menu>   \n      </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content fxFlexFill>\n        <mat-drawer-container>\n            <mat-drawer class=\"menuSide\" mode=\"side\" opened>\n                <a *ngFor=\"let navItem of mainMenuItems\" \n                   class=\"menuSide\"\n                   [routerLink]=\"[navItem.path]\" mat-button>\n                    {{navItem.title}}\n                </a>\n            </mat-drawer>\n            <mat-drawer-content>\n              <router-outlet></router-outlet>\n            </mat-drawer-content>\n        </mat-drawer-container>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nd-ent',\n  templateUrl: './nd-ent.component.html',\n  styleUrls: ['./nd-ent.component.css']\n})\nexport class NdEntComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>nd-ent works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nd-proc',\n  templateUrl: './nd-proc.component.html',\n  styleUrls: ['./nd-proc.component.css']\n})\nexport class NdProcComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>nd-proc works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nfe',\n  templateUrl: './nfe.component.html',\n  styleUrls: ['./nfe.component.css']\n})\nexport class NfeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<h1 class=\"titulo\" >\n\n    <div fxLayout=\"col\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n        <span>Nota Fiscal</span>         \n    </div>\n\n    <div fxLayout=\"col\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n        <span>Eletrônica</span>         \n    </div>\n    \n</h1>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Essa rotina faz a Integração dos dados de XML e as configurações fiscais do Auditto para o Protheus, na importação dos dados o Protheus gera a nota fiscal de entrada já classificada, para isso a conversão e destinação precisam estar preenchidas no Auditto.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    O sistema busca via API as notas ficais convertidas na Auditto, essa conversão pode ser realizada na confirmação de entrada da nota (check-in), assim o trabalho é simples podendo ser realizado por quem recebe o material e saiba para que será utilizado.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    O Protheus com base nas regras fiscais do Auditto, utiliza uma TES que atenda as configurações ou a cria caso não exista, ele também cria exceção fiscal caso seja necessário, tudo para que o Fiscal fique correto. As duplicatas são carregadas conforme o XML e caso não exista uma condição de pagamento que atenda as configurações o sistema também a cria.\n</div>\n    \n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\">\n    \n        <ul class=\"ul\">Pré-Requisitos:\n        <li class=\"li\">Instalador rodado;</li>\n        <li class=\"li\">Integrador configurado;</li>\n        <li class=\"li\">Patch de NFE compilada;</li>\n        <li class=\"li\">Acesso ao Auditto criado;</li>\n        <li class=\"li\">Conversor auditto executado;</li>\n        </ul>\n    \n</div>\n\n<section id=\"tp1Nfe\">\n        <h2 class=\"subtit\" >\n        \n            <div fxLayout=\"col\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n                <li><span>Funcionamento:</span></li>\n            </div>\n            \n        </h2>\n</section>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Acesse o Auditto ->Gestor Fiscal\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/auditto_opc.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Check-In\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/auditto_chkin.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Realize a leitura do código de barras da nota de entrada.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/auditto_chkin_cab.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/auditto_chkin_itens.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Para nota de entrada normal, pode-se selecionar o pedido de compra pelo cabeçalho e o sistema identifica os itens pelo preço e amarra automaticamente.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/auditto_chkin_pc_cab.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/auditto_chkin_pc_cab_2.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Pode selecionar por item, para isso é necessário selecionar o produto primeiro e caso sua empresa não utilize PC apenas o produto é necessário.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/auditto_chkin_pc_it_prd_1.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    O NCM do XML já vem marcado como filtro do produto para facilitar a busca.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/auditto_chkin_pc_it_prd_2.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Só vem os pedidos de compra com saldo para o produto selecionado.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/auditto_chkin_pc_it_1.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Caso seja uma nota de retorno não aparecerá o produto e nem pedido para ser selecionado e aparecerá um novo campo de nota referenciada.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/auditto_chkin_nfref_1.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Com o buscar ela pode ser selecionada de forma simples e prática.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/auditto_chkin_nfref_2.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Para que o sistema gere as parcelas conforme informação do XML é preciso criar o ponto de entrada MTColSE2.\n</div>\n\n<textarea autosize class=\"box\" readonly=\"true\" >\n        \n        User Function MTColSE2\n\n        Local aColsSE2 := Paramixb[1]\n\n        aColsSE2 := U_XMLAP001(aColsSE2)\n        \n        Return aColsSE2\n</textarea>\n    \n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    O programa fará a leitura das notas registradas e processará a entrada automaticamente, você pode acompanhar o processo pela tabela informada no configurador.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/auditto_acmp_1.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/auditto_acmp_2.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Caso dê algum erro o sistema gravará o retorno na tabela para que possa ser analisado, quando o Job for executado novamente a nota com problema será reprocessada.\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/auditto_acmp_3.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/auditto_acmp_4.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    A base utilizada estava sem informação, veja o cadastro de TES após o término do processamento:\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/cad_tes.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Veja os documentos de entrada:\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/cad_nfe.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"center start\" fxLayoutGap=\"30px\">\n    <img src=\"assets/img/nfe_det.png\" class=\"img-fluid\" />\n</div>\n\n<div class=\"text\" fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    Recomendação: Coloque primeiro o processo para rodar em uma base de testes e confira com a sua base de produção se a nota está correta, o sistema não incluirá uma mesma nota novamente, apenas mudará o status na tabela avisando-o que a nota foi incluída manualmente.\n</div>\n\n<section id=\"tp2Nfe\">\n        <h2 class=\"subtit\" >\n        \n            <div fxLayout=\"col\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n                <li><span>Pontos de Entrada:</span></li>\n            </div>\n            \n        </h2>\n</section>\n\n<div fxLayout=\"col\" fxLayoutAlign=\"start start\" fxLayoutGap=\"30px\">\n    <ul>\n    <li>XMLPU004 - Tratar gravação do cabeçalho na importação das informações da NF-e - Está posicionado na tabela e não têm retorno .</li>\n    <li>XMLPU005 - Tratar gravação dos itens na importação das informações da NF-e - Está posicionado na tabela e é chamado por item e não têm retorno .</li>\n    <li>XMLPU006 - Tratar gravação da duplicata na importação das informações da NF-e - Está posicionado na tabela e é chamado por parcela e não têm retorno .</li>\n    <li>XMLPU003 - Tratar array de ExecAuto cabeçalho e itens - Recebe como parâmetro os arrays e como retorno espera os arrays.</li>\n    </ul>\n</div>\n\n<textarea class=\"box\" autosize readonly=\"true\" >\n\n        User Function XMLPU003\n\n        Local aCab   := Paramixb[1]\n        Local aItens := Paramixb[2]\n        \n        Return {aCab,aItens}\n</textarea>\n    ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nfs-cad',\n  templateUrl: './nfs-cad.component.html',\n  styleUrls: ['./nfs-cad.component.css']\n})\nexport class NfsCadComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>nfs-cad works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nfs-conv',\n  templateUrl: './nfs-conv.component.html',\n  styleUrls: ['./nfs-conv.component.css']\n})\nexport class NfsConvComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>nfs-conv works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nfs-ent',\n  templateUrl: './nfs-ent.component.html',\n  styleUrls: ['./nfs-ent.component.css']\n})\nexport class NfsEntComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>nfs-ent works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nfs-proc',\n  templateUrl: './nfs-proc.component.html',\n  styleUrls: ['./nfs-proc.component.css']\n})\nexport class NfsProcComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>nfs-proc works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nfs',\n  template: `\n    <p>\n      nfs works!\n    </p>\n  `,\n  styles: []\n})\nexport class NfsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}