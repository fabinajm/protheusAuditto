import { EventEmitter, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import { Router } from '@angular/router';
import { EasingLogic, PageScrollService } from 'ngx-page-scroll-core';
import * as ɵngcc0 from '@angular/core';
export declare class NgxPageScrollDirective implements OnChanges, OnDestroy {
    private pageScrollService;
    private router;
    routerLink: any;
    href: string;
    pageScrollTarget: string;
    pageScrollHorizontal: boolean;
    pageScrollOffset: number;
    pageScrollDuration: number;
    pageScrollSpeed: number;
    pageScrollEasing: EasingLogic;
    pageScrollInterruptible: boolean;
    pageScrollAdjustHash: boolean;
    pageScroll: string;
    pageScrollFinish: EventEmitter<boolean>;
    private pageScrollInstance;
    private document;
    constructor(pageScrollService: PageScrollService, router: Router, document: any);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    private generatePageScrollInstance;
    private pushRouterState;
    private scroll;
    handleClick(clickEvent: Event): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxPageScrollDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<NgxPageScrollDirective, "[pageScroll]", never, {
    "pageScrollAdjustHash": "pageScrollAdjustHash";
    "routerLink": "routerLink";
    "href": "href";
    "pageScrollTarget": "pageScrollTarget";
    "pageScrollHorizontal": "pageScrollHorizontal";
    "pageScrollOffset": "pageScrollOffset";
    "pageScrollDuration": "pageScrollDuration";
    "pageScrollSpeed": "pageScrollSpeed";
    "pageScrollEasing": "pageScrollEasing";
    "pageScrollInterruptible": "pageScrollInterruptible";
    "pageScroll": "pageScroll";
}, {
    "pageScrollFinish": "pageScrollFinish";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXBhZ2Utc2Nyb2xsLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJuZ3gtcGFnZS1zY3JvbGwuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFHQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXdCQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJvdXRlciB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBFYXNpbmdMb2dpYywgUGFnZVNjcm9sbFNlcnZpY2UgfSBmcm9tICduZ3gtcGFnZS1zY3JvbGwtY29yZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOZ3hQYWdlU2Nyb2xsRGlyZWN0aXZlIGltcGxlbWVudHMgT25DaGFuZ2VzLCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgcGFnZVNjcm9sbFNlcnZpY2U7XG4gICAgcHJpdmF0ZSByb3V0ZXI7XG4gICAgcm91dGVyTGluazogYW55O1xuICAgIGhyZWY6IHN0cmluZztcbiAgICBwYWdlU2Nyb2xsVGFyZ2V0OiBzdHJpbmc7XG4gICAgcGFnZVNjcm9sbEhvcml6b250YWw6IGJvb2xlYW47XG4gICAgcGFnZVNjcm9sbE9mZnNldDogbnVtYmVyO1xuICAgIHBhZ2VTY3JvbGxEdXJhdGlvbjogbnVtYmVyO1xuICAgIHBhZ2VTY3JvbGxTcGVlZDogbnVtYmVyO1xuICAgIHBhZ2VTY3JvbGxFYXNpbmc6IEVhc2luZ0xvZ2ljO1xuICAgIHBhZ2VTY3JvbGxJbnRlcnJ1cHRpYmxlOiBib29sZWFuO1xuICAgIHBhZ2VTY3JvbGxBZGp1c3RIYXNoOiBib29sZWFuO1xuICAgIHBhZ2VTY3JvbGw6IHN0cmluZztcbiAgICBwYWdlU2Nyb2xsRmluaXNoOiBFdmVudEVtaXR0ZXI8Ym9vbGVhbj47XG4gICAgcHJpdmF0ZSBwYWdlU2Nyb2xsSW5zdGFuY2U7XG4gICAgcHJpdmF0ZSBkb2N1bWVudDtcbiAgICBjb25zdHJ1Y3RvcihwYWdlU2Nyb2xsU2VydmljZTogUGFnZVNjcm9sbFNlcnZpY2UsIHJvdXRlcjogUm91dGVyLCBkb2N1bWVudDogYW55KTtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIHByaXZhdGUgZ2VuZXJhdGVQYWdlU2Nyb2xsSW5zdGFuY2U7XG4gICAgcHJpdmF0ZSBwdXNoUm91dGVyU3RhdGU7XG4gICAgcHJpdmF0ZSBzY3JvbGw7XG4gICAgaGFuZGxlQ2xpY2soY2xpY2tFdmVudDogRXZlbnQpOiBib29sZWFuO1xufVxuIl19